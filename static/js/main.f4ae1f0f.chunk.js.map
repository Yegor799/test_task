{"version":3,"sources":["components/Field/Field.jsx","components/HoverSquares/HoverSquares.jsx","components/GameMode/GameMode.jsx","App.js","index.js"],"names":["Field","rows","setRow","setCol","mouseEnter","e","target","classList","remove","add","rowAmount","onRowChange","id","onColChange","className","squares","i","push","onMouseEnter","onMouseOver","j","buildField","HoverSquares","total","map","item","idx","row","col","GameMode","useState","gameData","setGameData","mode","setMode","setRowAmount","isSelected","setIsSelected","setTotal","a","axios","get","response","data","console","error","useEffect","getData","field","prev","gameModes","Object","keys","onSubmit","preventDefault","onChange","value","disabled","type","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4ae1f0f.chunk.js","sourcesContent":["import \"./Field.css\";\n\nexport default function Field({ rows, setRow, setCol }) {\n  const mouseEnter = (e) => {\n    e.target.classList[1] === \"isActive\"\n      ? e.target.classList.remove(\"isActive\")\n      : e.target.classList.add(\"isActive\");\n  };\n\n  const rowAmount = rows;\n\n  const onRowChange = (e) => {\n    setRow(e.target.id);\n  };\n\n  const onColChange = (e) => {\n    setCol(e.target.id);\n  };\n\n  const buildField = () => {\n    const rows = [];\n    const squares = [];\n    for (let i = 1; i <= rowAmount; i += 1) {\n      squares.push(\n        <div\n          className=\"square\"\n          key={i}\n          id={i}\n          onMouseEnter={(e) => mouseEnter(e)}\n          onMouseOver={(e) => onColChange(e)}\n        ></div>\n      );\n    }\n    for (let j = 1; j <= rowAmount; j += 1) {\n      rows.push(\n        <div className=\"row\" key={j} id={j} onMouseOver={(e) => onRowChange(e)}>\n          {squares}\n        </div>\n      );\n    }\n\n    return rows;\n  };\n\n  return <div className=\"field\">{buildField()}</div>;\n}\n","export default function HoverSquares({ total }) {\n  return (\n    <div>\n      <h1>Hover squares</h1>\n      {total &&\n        total.map((item, idx) => (\n          <p key={idx}>\n            row: {item.row} col: {item.col}\n          </p>\n        ))}\n    </div>\n  );\n}\n","import \"./GameMode.css\";\nimport axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport Field from \"../Field/Field\";\nimport HoverSquares from \"../HoverSquares/HoverSquares\";\n\nexport default function GameMode() {\n  const [gameData, setGameData] = useState({});\n  const [mode, setMode] = useState(null);\n  const [rowAmount, setRowAmount] = useState(null);\n  const [isSelected, setIsSelected] = useState(false);\n  const [row, setRow] = useState(null);\n  const [col, setCol] = useState(null);\n  const [total, setTotal] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  useEffect(() => {\n    if (!mode) {\n      return;\n    }\n    setRowAmount(gameData[mode].field);\n  }, [gameData, mode]);\n\n  useEffect(() => {\n    setTotal((prev) => [...prev, { row: row, col: col }]);\n  }, [col, row]);\n\n  async function getData() {\n    try {\n      const response = await axios.get(\"http://demo1030918.mockable.io/\");\n      setGameData(response.data);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  const onChange = (e) => {\n    e.preventDefault();\n    setMode(e.target.value);\n    setIsSelected(false);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    setIsSelected(true);\n  };\n\n  const onRowChange = (value) => {\n    setRow(value);\n  };\n\n  const onColChange = (value) => {\n    setCol(value);\n  };\n\n  const gameModes = Object.keys(gameData);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit}>\n        <select onChange={onChange}>\n          <option value=\"\" disabled>\n            Pick mode\n          </option>\n          {gameModes.map((mode, idx) => (\n            <option key={idx} value={mode}>\n              {mode}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Start</button>\n      </form>\n      <div className=\"squares\">\n        {isSelected && (\n          <Field rows={rowAmount} setRow={onRowChange} setCol={onColChange} />\n        )}\n        {isSelected && <HoverSquares total={total} />}\n      </div>\n    </div>\n  );\n}\n","import \"./App.css\";\nimport GameMode from \"./components/GameMode/GameMode\";\n\nfunction App() {\n  return (\n    <>\n      <GameMode />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}